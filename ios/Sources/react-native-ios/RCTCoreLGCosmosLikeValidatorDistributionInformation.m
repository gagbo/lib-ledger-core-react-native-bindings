// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from validators.djinni

#import "RCTCoreLGCosmosLikeValidatorDistributionInformation.h"
#import "LGCosmosLikeValidatorDistributionInformation.h"

@implementation RCTCoreLGCosmosLikeValidatorDistributionInformation

//Export module
RCT_EXPORT_MODULE(RCTCoreLGCosmosLikeValidatorDistributionInformation)

@synthesize bridge = _bridge;

+ (BOOL)requiresMainQueueSetup
{
    return NO;
}
RCT_REMAP_METHOD(release, release:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseRelease:currentInstance withResolver: resolve rejecter:reject];
}
RCT_REMAP_METHOD(log, logWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseLogWithResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(flush, flushWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseFlushWithResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(isNull, isNull:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseIsNull:currentInstance withResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(init, initWithSelfBondRewards:(nonnull NSString *)selfBondRewards
                           validatorCommission:(nonnull NSString *)validatorCommission withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {


    LGCosmosLikeValidatorDistributionInformation * finalResult = [[LGCosmosLikeValidatorDistributionInformation alloc] initWithSelfBondRewards:selfBondRewards validatorCommission:validatorCommission];
    NSString *uuid = [[NSUUID UUID] UUIDString];
    RCTCoreLGCosmosLikeValidatorDistributionInformation *rctImpl = (RCTCoreLGCosmosLikeValidatorDistributionInformation *)[self.bridge moduleForName:@"CoreLGCosmosLikeValidatorDistributionInformation"];
    NSArray *finalResultArray = [[NSArray alloc] initWithObjects:finalResult, uuid, nil];
    [rctImpl baseSetObject:finalResultArray];
    NSDictionary *result = @{@"type" : @"CoreLGCosmosLikeValidatorDistributionInformation", @"uid" : uuid };
    if (result)
    {
        resolve(result);
    }
}

RCT_REMAP_METHOD(getSelfBondRewards, getSelfBondRewards:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGCosmosLikeValidatorDistributionInformation *objcImpl = (LGCosmosLikeValidatorDistributionInformation *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.selfBondRewards};
    resolve(result);
}

RCT_REMAP_METHOD(getValidatorCommission, getValidatorCommission:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGCosmosLikeValidatorDistributionInformation *objcImpl = (LGCosmosLikeValidatorDistributionInformation *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.validatorCommission};
    resolve(result);
}

@end
