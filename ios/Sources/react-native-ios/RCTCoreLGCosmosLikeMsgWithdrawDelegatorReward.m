// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#import "RCTCoreLGCosmosLikeMsgWithdrawDelegatorReward.h"
#import "LGCosmosLikeMsgWithdrawDelegatorReward.h"

@implementation RCTCoreLGCosmosLikeMsgWithdrawDelegatorReward

//Export module
RCT_EXPORT_MODULE(RCTCoreLGCosmosLikeMsgWithdrawDelegatorReward)

@synthesize bridge = _bridge;

+ (BOOL)requiresMainQueueSetup
{
    return NO;
}
RCT_REMAP_METHOD(release, release:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseRelease:currentInstance withResolver: resolve rejecter:reject];
}
RCT_REMAP_METHOD(log, logWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseLogWithResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(flush, flushWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseFlushWithResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(isNull, isNull:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseIsNull:currentInstance withResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(init, initWithDelegatorAddress:(nonnull NSString *)delegatorAddress
                               validatorAddress:(nonnull NSString *)validatorAddress withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {


    LGCosmosLikeMsgWithdrawDelegatorReward * finalResult = [[LGCosmosLikeMsgWithdrawDelegatorReward alloc] initWithDelegatorAddress:delegatorAddress validatorAddress:validatorAddress];
    NSString *uuid = [[NSUUID UUID] UUIDString];
    RCTCoreLGCosmosLikeMsgWithdrawDelegatorReward *rctImpl = (RCTCoreLGCosmosLikeMsgWithdrawDelegatorReward *)[self.bridge moduleForName:@"CoreLGCosmosLikeMsgWithdrawDelegatorReward"];
    NSArray *finalResultArray = [[NSArray alloc] initWithObjects:finalResult, uuid, nil];
    [rctImpl baseSetObject:finalResultArray];
    NSDictionary *result = @{@"type" : @"CoreLGCosmosLikeMsgWithdrawDelegatorReward", @"uid" : uuid };
    if (result)
    {
        resolve(result);
    }
}

RCT_REMAP_METHOD(getDelegatorAddress, getDelegatorAddress:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGCosmosLikeMsgWithdrawDelegatorReward *objcImpl = (LGCosmosLikeMsgWithdrawDelegatorReward *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.delegatorAddress};
    resolve(result);
}

RCT_REMAP_METHOD(getValidatorAddress, getValidatorAddress:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGCosmosLikeMsgWithdrawDelegatorReward *objcImpl = (LGCosmosLikeMsgWithdrawDelegatorReward *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.validatorAddress};
    resolve(result);
}

@end
