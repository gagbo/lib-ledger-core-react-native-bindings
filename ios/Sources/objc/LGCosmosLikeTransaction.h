// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#import <Foundation/Foundation.h>
@class LGAmount;
@class LGBigInt;
@class LGCosmosLikeMessage;


/**Class representing a Cosmos transaction */
@interface LGCosmosLikeTransaction : NSObject

/** Get the time when the transaction was issued or the time of the block including this transaction */
- (nonnull NSDate *)getDate;

/** Get Fee (in drop) */
- (nullable LGAmount *)getFee;

/** Get gas Wanted (maximum gas advertised in transaction) */
- (nullable LGAmount *)getGas;

/** Get gas used (gas actually used in the transaction) */
- (nullable LGBigInt *)getGasUsed;

/** Get gas Wanted (in BigInt form) */
- (nullable LGBigInt *)getGasWanted;

/** Get the hash of the transaction. */
- (nonnull NSString *)getHash;

/** Get memo */
- (nonnull NSString *)getMemo;

/** Get the list of messages */
- (nonnull NSArray<LGCosmosLikeMessage *> *)getMessages;

/** Get Signing public Key */
- (nonnull NSData *)getSigningPubKey;

/** Serialize the transaction to be signed */
- (nonnull NSString *)serializeForSignature;

/** Set signature of transaction, when a signature is set it can be broadcasted */
- (void)setSignature:(nonnull NSData *)rSignature
          sSignature:(nonnull NSData *)sSignature;

- (void)setDERSignature:(nonnull NSData *)signature;

/**
 * Serialize the transaction to be broadcast
 * @param mode The supported broadcast modes include
 *        "block"(return after tx commit), (https://docs.cosmos.network/master/basics/tx-lifecycle.html#commit)
 *        "sync"(return afer CheckTx), (https://docs.cosmos.network/master/basics/tx-lifecycle.html#types-of-checks) and
 *        "async"(return right away).
 * @return string the json payload to broadcast on the network
 */
- (nonnull NSString *)serializeForBroadcast:(nonnull NSString *)mode;

@end
