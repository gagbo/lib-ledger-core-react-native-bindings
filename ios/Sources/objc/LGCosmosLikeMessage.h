// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from messages.djinni

#import "LGCosmosLikeMsgBeginRedelegate.h"
#import "LGCosmosLikeMsgCreateValidator.h"
#import "LGCosmosLikeMsgDelegate.h"
#import "LGCosmosLikeMsgDeposit.h"
#import "LGCosmosLikeMsgEditValidator.h"
#import "LGCosmosLikeMsgMultiSend.h"
#import "LGCosmosLikeMsgSend.h"
#import "LGCosmosLikeMsgSetWithdrawAddress.h"
#import "LGCosmosLikeMsgSubmitProposal.h"
#import "LGCosmosLikeMsgType.h"
#import "LGCosmosLikeMsgUndelegate.h"
#import "LGCosmosLikeMsgUnjail.h"
#import "LGCosmosLikeMsgVote.h"
#import "LGCosmosLikeMsgWithdrawDelegationReward.h"
#import "LGCosmosLikeMsgWithdrawDelegatorReward.h"
#import "LGCosmosLikeMsgWithdrawValidatorCommission.h"
#import <Foundation/Foundation.h>
@class LGCosmosLikeMessage;


@interface LGCosmosLikeMessage : NSObject

/**
 * Get type
 * @return CosmosLikeMsgType a message type
 */
- (LGCosmosLikeMsgType)getMessageType;

/**
 * Get type
 * @return string a message type in string format
 */
- (nonnull NSString *)getRawMessageType;

/**
 * Get type
 * @return bool if the message was successfully executed on the chain
 */
- (BOOL)getSuccess;

/**
 * Get type
 * @return string the log of the message execution (useful when getSuccess() == false)
 */
- (nonnull NSString *)getLog;

/**
 * Get message index in the tx
 * @return string the 0-based index in the tx or "fees" for the fees in the tx
 */
- (nonnull NSString *)getIndex;

/**
 * Wrap the given CosmosLikeMsgSend into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgSend:(nonnull LGCosmosLikeMsgSend *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgSend
 * @param msg The message to unwrap
 * @return CosmosLikeMsgDelegate the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgSend *)unwrapMsgSend:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgDelegate into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgDelegate:(nonnull LGCosmosLikeMsgDelegate *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgDelegate
 * @param msg The message to unwrap
 * @return CosmosLikeMsgDelegate the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgDelegate *)unwrapMsgDelegate:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgUndelegate into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgUndelegate:(nonnull LGCosmosLikeMsgUndelegate *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgUndelegate
 * @param msg The message to unwrap
 * @return CosmosLikeMsgUndelegate the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgUndelegate *)unwrapMsgUndelegate:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgBeginRedelegate into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgBeginRedelegate:(nonnull LGCosmosLikeMsgBeginRedelegate *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgBeginRedelegate
 * @param msg The message to unwrap
 * @return CosmosLikeMsgBeginRedelegate the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgBeginRedelegate *)unwrapMsgBeginRedelegate:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgSubmitProposal into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgSubmitProposal:(nonnull LGCosmosLikeMsgSubmitProposal *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgSubmitProposal
 * @param msg The message to unwrap
 * @return CosmosLikeMsgSubmitProposal the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgSubmitProposal *)unwrapMsgSubmitProposal:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgVote into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgVote:(nonnull LGCosmosLikeMsgVote *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgVote
 * @param msg The message to unwrap
 * @return CosmosLikeMsgVote the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgVote *)unwrapMsgVote:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgDeposit into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgDeposit:(nonnull LGCosmosLikeMsgDeposit *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgDeposit
 * @param msg The message to unwrap
 * @return CosmosLikeMsgDeposit the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgDeposit *)unwrapMsgDeposit:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgWithdrawDelegationReward into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgWithdrawDelegationReward:(nonnull LGCosmosLikeMsgWithdrawDelegationReward *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgWithdrawDelegationReward
 * @param msg The message to unwrap
 * @return CosmosLikeMsgWithdrawDelegationReward the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgWithdrawDelegationReward *)unwrapMsgWithdrawDelegationReward:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgMultiSend into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgMultiSend:(nonnull LGCosmosLikeMsgMultiSend *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgMultiSend
 * @param msg The message to unwrap
 * @return CosmosLikeMsgMultiSend the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgMultiSend *)unwrapMsgMultiSend:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgCreateValidator into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgCreateValidator:(nonnull LGCosmosLikeMsgCreateValidator *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgCreateValidator
 * @param msg The message to unwrap
 * @return CosmosLikeMsgCreateValidator the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgCreateValidator *)unwrapMsgCreateValidator:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgEditValidator into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgEditValidator:(nonnull LGCosmosLikeMsgEditValidator *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgEditValidator
 * @param msg The message to unwrap
 * @return CosmosLikeMsgEditValidator the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgEditValidator *)unwrapMsgEditValidator:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgSetWithdrawAddress into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgSetWithdrawAddress:(nonnull LGCosmosLikeMsgSetWithdrawAddress *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgSetWithdrawAddress
 * @param msg The message to unwrap
 * @return CosmosLikeMsgSetWithdrawAddress the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgSetWithdrawAddress *)unwrapMsgSetWithdrawAddress:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgWithdrawDelegatorReward into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgWithdrawDelegatorReward:(nonnull LGCosmosLikeMsgWithdrawDelegatorReward *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgWithdrawDelegatorReward
 * @param msg The message to unwrap
 * @return CosmosLikeMsgWithdrawDelegatorReward the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgWithdrawDelegatorReward *)unwrapMsgWithdrawDelegatorReward:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgWithdrawValidatorCommission into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgWithdrawValidatorCommission:(nonnull LGCosmosLikeMsgWithdrawValidatorCommission *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgWithdrawValidatorCommission
 * @param msg The message to unwrap
 * @return CosmosLikeMsgWithdrawValidatorCommission the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgWithdrawValidatorCommission *)unwrapMsgWithdrawValidatorCommission:(nullable LGCosmosLikeMessage *)msg;

/**
 * Wrap the given CosmosLikeMsgUnjail into a CosmosLikeMessage
 * @param msg The message you need to wrap.
 * @return CosmosLikeMessage A wrapped message.
 */
+ (nullable LGCosmosLikeMessage *)wrapMsgUnjail:(nonnull LGCosmosLikeMsgUnjail *)msg;

/**
 * Unwrap a message to a CosmosLikeMsgUnjail
 * @param msg The message to unwrap
 * @return CosmosLikeMsgUnjail the unwrapped message
 */
+ (nonnull LGCosmosLikeMsgUnjail *)unwrapMsgUnjail:(nullable LGCosmosLikeMessage *)msg;

@end
